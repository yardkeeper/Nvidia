FROM ubuntu:focal

ARG L4T_RELEASE_MAJOR=35.1
ARG L4T_RELEASE_MINOR=1
ARG CUDA=11.4
ARG DEBIAN_FRONTEND=noninteractive
ARG SOC="t194"
ARG GID=1000
ARG UID=1000
ARG L4T_RELEASE=$L4T_RELEASE_MAJOR.$L4T_RELEASE_MINOR

ENV USERNAME nvidia
ENV HOME /home/$USERNAME

RUN useradd -m $USERNAME && \
    echo "$USERNAME:$USERNAME" | chpasswd && \
    usermod --shell /bin/bash $USERNAME && \
    usermod -aG sudo $USERNAME && \
    mkdir /etc/sudoers.d && \
    echo "$USERNAME ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers.d/$USERNAME && \
    chmod 0440 /etc/sudoers.d/$USERNAME && \
    usermod  --uid ${UID} $USERNAME && \
    groupmod --gid ${GID} $USERNAME


RUN apt update && \
    apt install  --no-install-recommends sudo wget apt-utils software-properties-common -y  && \
    apt upgrade -y && \
    rm -rf /var/lib/apt/lists/* && \
    apt clean


RUN echo $L4T_RELEASE_MAJOR

ADD --chown=root:root https://repo.download.nvidia.com/jetson/jetson-ota-public.asc /etc/apt/trusted.gpg.d/jetson-ota-public.asc

RUN chmod 644 /etc/apt/trusted.gpg.d/jetson-ota-public.asc && \
    apt update && apt install --no-install-recommends ca-certificates -y && \
    echo "deb https://repo.download.nvidia.com/jetson/common r$L4T_RELEASE_MAJOR main" > /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
    echo "deb https://repo.download.nvidia.com/jetson/${SOC} r$L4T_RELEASE_MAJOR main" >> /etc/apt/sources.list.d/nvidia-l4t-apt-source.list && \
    rm -rf /var/lib/apt/lists/* && \
    apt clean

RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null && \
    apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"

RUN apt update && \
    apt install libglu1-mesa-dev mc cmake vim nano git mlocate build-essential freeglut3 freeglut3-dev cuda-11-4 cuda-toolkit-11-4 tensorrt unzip dialog  mosquitto mosquitto-dev libmosquitto1 libmosquitto-dev \
    libv4l-dev  v4l-utils libudev-dev  libjson-c4  libjson-c-dev  v4l-conf v4l-utils \
    libmosquittopp1 libmosquittopp-dev mosquitto-clients  \
    ffmpeg libavdevice-dev liblapack3 liblapack-dev libsuitesparse-dev libpng-dev \
    pkg-config libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev gfortran  openexr libatlas-base-dev python3-dev \
    python3-numpy libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev -y && \
    rm -rf /var/lib/apt/lists/* && \
    apt clean

#v4l2loopback-dkms


RUN echo "/usr/lib/aarch64-linux-gnu/tegra" >> /etc/ld.so.conf.d/nvidia-tegra.conf && \
    echo "/usr/lib/aarch64-linux-gnu/tegra-egl" >> /etc/ld.so.conf.d/nvidia-tegra.conf

RUN rm /usr/share/glvnd/egl_vendor.d/50_mesa.json

RUN mkdir -p /usr/share/glvnd/egl_vendor.d/ && \
    echo '{"file_format_version" : "1.0.0" , "ICD" : { "library_path" : "libEGL_nvidia.so.0" }}' > /usr/share/glvnd/egl_vendor.d/10_nvidia.json

RUN mkdir -p /usr/share/egl/egl_external_platform.d/ && \
    echo '{"file_format_version" : "1.0.0" , "ICD" : { "library_path" : "libnvidia-egl-wayland.so.1" }}' > /usr/share/egl/egl_external_platform.d/nvidia_wayland.json

RUN echo "/usr/local/cuda-$CUDA/targets/aarch64-linux/lib" >> /etc/ld.so.conf.d/nvidia.conf

RUN ldconfig


ENV PATH /usr/local/cuda-$CUDA/bin:/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH /usr/local/cuda-$CUDA/targets/aarch64-linux/lib:${LD_LIBRARY_PATH}
ENV LD_LIBRARY_PATH=/opt/nvidia/vpi1/lib64:${LD_LIBRARY_PATH}
ENV LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu/tegra:${LD_LIBRARY_PATH}
ENV LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu/tegra-egl:${LD_LIBRARY_PATH}

ENV OPENBLAS_CORETYPE=ARMV8
ENV NVIDIA_VISIBLE_DEVICES all
ENV NVIDIA_DRIVER_CAPABILITIES all


WORKDIR /root
CMD ["bash"]
